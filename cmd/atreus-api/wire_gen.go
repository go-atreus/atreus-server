// Code generated by Wire. DO NOT EDIT.

//go:generate go run -mod=mod github.com/google/wire/cmd/wire
//go:build !wireinject
// +build !wireinject

package main

import (
	"github.com/go-atreus/atreus-server/internal/conf"
	"github.com/go-atreus/atreus-server/internal/data"
	"github.com/go-atreus/atreus-server/internal/server"
	"github.com/go-atreus/atreus-server/internal/server/router"
	"github.com/go-kratos/kratos/v2"
	"github.com/go-kratos/kratos/v2/log"
	"go.opentelemetry.io/otel/sdk/trace"
)

// Injectors from wire.go:

// initApp init application.
func initApp(logger log.Logger, tracerProvider *trace.TracerProvider, bootstrap *conf.Bootstrap, auth *conf.Auth) (*kratos.App, func(), error) {
	discovery := data.NewDiscovery()
	authApi := router.NewAuthApi(logger, auth, discovery)
	httpServer := server.NewHTTPServer(authApi, logger, auth, tracerProvider)
	grpcServer := server.NewGRPCServer()
	registrar := data.NewRegistrar()
	app := newApp(logger, httpServer, grpcServer, registrar)
	return app, func() {
	}, nil
}
