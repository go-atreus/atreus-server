syntax = "proto3";
package atreus.organization;
option go_package = "github.com/go-atreus/atreus-server/app/admin/api/organization;organization";

import "google/api/annotations.proto";
import "google/protobuf/timestamp.proto";
import "options/gorm.proto";


message SysOrganization{
  option (gorm.opts) = {
    ormable: true,
    table: "sys_organizations"
  };
  int32 id = 1 [(gorm.field).tag = {primary_key: true auto_increment: true type: "integer"}];
  // 组织名称
  string name = 2;
  // 父级ID
  int32 parentId = 3;
  // 层级信息，从根节点到当前节点的最短路径，使用-分割节点ID
  string hierarchy = 4;
  // 当前节点深度
  int32 depth = 5;
  // 备注
  string remarks = 6;
  // 排序字段，由小到大
  int32 sort = 7;
  // 创建者
  string createBy = 8;
  // 修改者
  string updateBy = 9;
  // 创建时间
  google.protobuf.Timestamp createdAt = 10;
  // 更新时间
  google.protobuf.Timestamp updatedAt = 11;
  // 下级组织
  repeated SysOrganization children = 12;
}

message ListSysOrganization{
  // 组织列表
  repeated SysOrganization results = 1;
  // 总数
  int64 total = 2;
}

service Organization{
  option (gorm.server).autogen = true;
  // 创建组织
  rpc CreateOrganization(SysOrganization) returns (SysOrganization) {
    option (google.api.http) = {
      post: "/system/organization/create"
      body: "*"
    };
  }
  // 查询组织
  rpc QueryOrganization(SysOrganization) returns (SysOrganization) {
    option (google.api.http) = {
      get: "/system/organization/query"
    };
  }
  // 更新组织
  rpc UpdateOrganization(SysOrganization) returns (SysOrganization) {
    option (google.api.http) = {
      post: "/system/organization/update"
      body: "*"
    };
  }
  // 删除组织
  rpc DeleteOrganization(SysOrganization) returns (SysOrganization) {
    option (google.api.http) = {
      delete: "/system/organization/delete"
    };
  }
  // 获取所有组织
  rpc ListOrganization(SysOrganization) returns (ListSysOrganization) {
    option (google.api.http) = {
      post: "/system/organization/list",
      body: "*"
    };
  }
  // 获取组织树
  rpc OrganizationTree(SysOrganization) returns (ListSysOrganization) {
    option (google.api.http) = {
      post: "/system/organization/tree",
      body: "*"
    };
  }
}